name: Build

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
    branches:
      - main
      - unstable
  push:
    branches:
      - main
      - unstable

env:
  LLVM: 15
  GCC_VERSION: 12

jobs:

  build:

    strategy:
        fail-fast: true
        matrix:
          include:
            - {os: ubuntu-latest, cc: gcc-12, cxx: g++-12}
            - {os: ubuntu-latest, cc: clang-15, cxx: clang++-15}
  
    runs-on: ${{ matrix.os }}
    
    steps:
      - uses: actions/checkout@v4
      
      - name: install dependencies
        run:
          sudo apt-get update &&
          sudo apt-get install -y lsb-release wget software-properties-common &&
          wget -O /tmp/llvm.sh https://apt.llvm.org/llvm.sh &&
          sudo chmod +x /tmp/llvm.sh &&
          sudo apt-get purge --auto-remove llvm python3-lldb-${LLVM} llvm-${LLVM} &&
          sudo /tmp/llvm.sh ${LLVM} &&
          sudo apt-get install
            clang-${LLVM}
            cmake 
            g++-${GCC_VERSION}
            gfortran 
            git 
            vim 
            lldb-${LLVM} 
            libclang-${LLVM}-dev 
            libc++-${LLVM}-dev 
            libc++abi-${LLVM}-dev 
            libomp-${LLVM}-dev 
            hdf5-tools 
            libfftw3-dev 
            libgfortran5 
            libgmp-dev 
            libhdf5-dev 
            libblas-dev 
            liblapack-dev 
            libboost-dev 
            libopenmpi-dev 
            openmpi-bin 
            openmpi-common 
            python3-clang-${LLVM} 
            python3-dev 
            python3-pip 
            python3-mako 
            python3-mpi4py 
            python3-h5py 
            python3-numpy 
            python3-scipy 

      - name: install TRIQS
        env:
          CC: ${{ matrix.cc }}
          CXX: ${{ matrix.cxx }}
        run: |
          git clone https://github.com/TRIQS/triqs
          mkdir triqs/build && cd triqs/build
          cmake .. -DBuild_Documentation=OFF -DBuild_Tests=OFF
          make -j1 install VERBOSE=1
          sudo make -j1 install VERBOSE=1
          cd ../ 

  tests:
    needs: build
    
    strategy:
      fail-fast: true
      matrix:
        os: 
          - "ubuntu-latest"
        python-version:
          - "3.10"
          - "3.11"
          - "3.12"
      
    runs-on: ${{ matrix.os }}
    
    name: Check Python ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Only needed if using setuptools-scm
      
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          allow-prereleases: true
      
      - name: Install package
        run: python -m pip install -e .[test]
      
      - name: Test package
        run: python -m pytest