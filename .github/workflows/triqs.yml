name: Build TRIQS

on:
  workflow_call:
    inputs:
      os:
        required: true
        type: string
      cc:
        required: true
        type: string
      cxx:
        required: true
        type: string
      llvm:
        default: "15"
        type: string
      gcc_version:
        default: "12" 
        type: string

jobs:

  build-base:
  
    runs-on: ${{ inputs.os }}
    
    steps:
      - uses: actions/checkout@v4
      
      - name: install updates
        run: |
          sudo apt-get update &&
          sudo apt-get install -y lsb-release wget software-properties-common
     
      - name: install compiler tools
        shell: bash
        run: |
          if [ "${{ inputs.cc }}$" = "clang" ]; then
            wget -O /tmp/llvm.sh https://apt.llvm.org/llvm.sh &&
            sudo chmod +x /tmp/llvm.sh &&
            sudo /tmp/llvm.sh ${{ inputs.llvm }} &&
            sudo apt-get install -y 
              clang-${{ inputs.llvm }}
              lldb-${{ inputs.llvm }}
              libclang-${{ inputs.llvm }}-dev 
              libc++-${{ inputs.llvm }}-dev 
              libc++abi-${{ inputs.llvm }}-dev 
              libomp-${{ inputs.llvm }}-dev 
              python3-clang-${{ inputs.llvm }}
          elif [ "${{ inputs.cc }}$" = "gcc" ]; then
            echo "TESTTTTING"
            sudo apt-get install -y
              g++-${{ inputs.gcc_version }}
          fi

      - name: install dependencies
        run:          
          sudo apt-get install -y 
            cmake 
            gfortran 
            git 
            vim 
            hdf5-tools 
            libfftw3-dev 
            libgfortran5 
            libgmp-dev 
            libhdf5-dev 
            libblas-dev 
            liblapack-dev 
            libboost-dev 
            libopenmpi-dev 
            openmpi-bin 
            openmpi-common 
            python3-dev 
            python3-pip 
            python3-mako 
            python3-mpi4py 
            python3-h5py 
            python3-numpy 
            python3-scipy 

      - name: setup environment
        shell: bash
        run: |
          if [ "${{ inputs.cc }}$" = "clang" ]; then
            echo "CC=${{ inputs.cc }}-${{ inputs.llvm }}" >> $GITHUB_ENV
            echo "CXX=${{ inputs.cxx }}-${{ inputs.llvm }}" >> $GITHUB_ENV
          elif [ "${{ inputs.cc }}$" = "gcc" ]; then
            echo "CC=${{ inputs.cc }}-${{ inputs.gcc_version }}" >> $GITHUB_ENV
            echo "CXX=${{ inputs.cxx }}-${{ inputs.gcc_version }}" >> $GITHUB_ENV
          fi
      
      - name: install TRIQS
        run: |
          git clone https://github.com/TRIQS/triqs
          mkdir triqs/build && cd triqs/build
          cmake .. -DBuild_Documentation=OFF -DBuild_Tests=OFF -DCMAKE_INSTALL_PREFIX=/usr/ 
          make -j1 install VERBOSE=1
          sudo make install
          cd ../ 