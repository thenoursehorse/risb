name: Build TRIQS

on:
  workflow_call:
    inputs:
      os:
        required: true
        type: string
      cc:
        required: true
        type: string
      cxx:
        required: true
        type: string
      python-version:
        required: true
        type: string
      llvm:
        default: "15"
        type: string
      gcc_version:
        default: "12" 
        type: string

jobs:

  build-base:
  
    runs-on: ${{ inputs.os }}
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Python ${{ inputs.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python-version }}
          allow-prereleases: true
      
      - name: install updates
        run: |
          sudo apt-get update &&
          sudo apt-get install -y lsb-release wget software-properties-common
     
      - name: install clang
        if: ${{ contains(inputs.cc, 'clang') }}
        run: 
          wget -O /tmp/llvm.sh https://apt.llvm.org/llvm.sh &&
          sudo chmod +x /tmp/llvm.sh &&
          sudo /tmp/llvm.sh ${{ inputs.llvm }} &&
          sudo apt-get install -y 
            clang-${{ inputs.llvm }}
            lldb-${{ inputs.llvm }}
            libclang-${{ inputs.llvm }}-dev 
            libc++-${{ inputs.llvm }}-dev 
            libc++abi-${{ inputs.llvm }}-dev 
            libomp-${{ inputs.llvm }}-dev 
      
      - name: install gcc
        if: ${{ contains(inputs.cc, 'gcc') }}
        run:
          sudo apt-get install -y 
            g++-${{ inputs.gcc_version }}

      - name: install ubuntu dependencies
        run:
          sudo apt-get install -y 
            cmake 
            gfortran 
            git 
            hdf5-tools 
            libfftw3-dev 
            libgfortran5 
            libgmp-dev 
            libhdf5-dev 
            libblas-dev 
            liblapack-dev 
            libboost-dev 
            libopenmpi-dev 
            openmpi-bin 
            openmpi-common 
            python3${{ inputs.python-version }}-dev
      
      - name: install python dependencies
        run:
          sudo pip install 
            clang 
            mako 
            mpi4py 
            h5py 
            numpy 
            scipy 

      - name: setup clang environment
        if: ${{ contains(inputs.cc, 'clang') }}
        run: |
          echo "CC=${{ inputs.cc }}-${{ inputs.llvm }}" >> $GITHUB_ENV
          echo "CXX=${{ inputs.cxx }}-${{ inputs.llvm }}" >> $GITHUB_ENV
          
      - name: setup gcc environment
        if: ${{ contains(inputs.cc, 'gcc') }}
        run: |
          echo "CC=${{ inputs.cc }}-${{ inputs.gcc_version }}" >> $GITHUB_ENV
          echo "CXX=${{ inputs.cxx }}-${{ inputs.gcc_version }}" >> $GITHUB_ENV
      
      - name: cache build TRIQS
        id: build-triqs
        uses: actions/cache@v3
        with:
          path: triqs
          key: triqs-${{ inputs.os }}-${{ inputs.cc }}-${{ inputs.llvm }}-${{ inputs.gcc_version }}

      - name: build TRIQS
        if: steps.build-triqs.outputs.cache-hit != 'true'
        run: |
          git clone https://github.com/TRIQS/triqs
          mkdir triqs/build && cd triqs/build
          cmake .. -DBuild_Documentation=OFF -DBuild_Tests=OFF -DCMAKE_INSTALL_PREFIX=/usr/ 
          make -j1 VERBOSE=1
          cd ../ 
          cd ../
          
      - name: install TRIQS
        run: cd triqs/build && sudo make install